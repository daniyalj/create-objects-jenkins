apiVersion: v1
kind: BuildConfig
metadata:
  name: jenkins-test
  labels:
    name: jenkins-test
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "myapp", "namespace": "", "kind": "DeploymentConfig"}]'
spec:
  triggers:
    -
    -
  runPolicy: Serial
  source:
    type: None
  strategy:
    type: JenkinsPipeline
    jenkinsPipelineStrategy:
      jenkinsfile: |-
          pipeline {
              agent {
                label 'maven'
              }
            stages {
              stage('Build App') {
                steps {
                  git branch: 'master', url: 'https://github.com/daniyalj/create-objects-jenkins.git'
                  sh 'ls'
                  script{
                  openshift.withCluster() {
                      openshift.withProject() {
                            def serviceSelector = openshift.selector( "service", "testsvc")
                            def serviceExists = serviceSelector.exists()
                     
                            if (!serviceExists) {
                              svc = openshift.create('-f service.yaml')
                            } else {
                              svc = serviceSelector.object()
                              echo "service exists.. moving on.."
                             }
                            }
                          }
                       }
                    }
                   }
                }
              }
  output:
  resources:
  postCommit:
